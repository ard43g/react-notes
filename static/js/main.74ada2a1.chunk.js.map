{"version":3,"sources":["components/change-name/index.js","components/change-name/changeName.js","components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-status-filter/index.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/error-field/index.js","components/error-field/error-field.js","components/post-add-form/post-add-form.js","components/post-add-form/index.js","components/enter-name/index.js","components/enter-name/enterName.js","components/posts-info/index.js","components/posts-info/posts-info.js","components/app/index.js","components/app/app.js","index.js"],"names":["ChangeName","change","type","onClick","className","AppHeader","userName","changeName","SearchPanel","props","state","term","onUpdateSearch","bind","event","target","value","this","setState","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","addClass","filter","onFilterSelect","PostListItem","id","onDelete","onToggleImportant","onToggleLiked","important","like","changePost","addChangePost","changePostId","useState","text","setText","useEffect","newPostText","e","addNewChangePost","preventDefault","NewPost","onSubmit","autoFocus","classNames","currentChangeId","PostList","posts","elements","item","itemProps","ErrorField","PostAddForm","emptyFieldError","onValueChange","length","onAdd","EnterName","onNameChange","user","addName","error","enter","formAdded","newName","PostsInfo","allPosts","liked","App","data","changeUserName","deleteItem","addItem","onChangeName","index","findIndex","elem","before","slice","after","post","postIndex","el","newPostChanged","body","lastElem","newItem","old","items","indexOf","window","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74ada2a1.chunk.js","sourcesContent":["import ChangeName from './changeName';\r\nexport default ChangeName;","import React from \"react\";\r\n\r\nconst ChangeName = ({ change }) => {\r\n    return (\r\n        <button type=\"submit\" onClick={change} className=\"btn btn-outline-danger btn-sm\">\r\n            Сменить имя\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ChangeName;\r\n","import React from \"react\";\r\nimport ChangeName from \"../change-name\";\r\n\r\nconst AppHeader = ({ userName, changeName }) => {\r\n    return (\r\n        <div className=\"app-header d-flex justify-content-between\">\r\n            <h1>{userName}</h1>\r\n            <ChangeName change={changeName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import AppHeader from './app-header';\r\nimport './app-header.css';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nimport './search-panel.css';\r\nexport default SearchPanel;","import React, { Component } from \"react\";\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: \"\",\r\n        };\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(event) {\r\n        const term = event.target.value;\r\n        this.setState({\r\n            term: term,\r\n        });\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor({ props }) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: \"all\", label: \"Все\" },\r\n            { name: \"like\", label: \"Понравилось\" },\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const active = this.props.filter === name;\r\n            const addClass = active ? \"btn-success\" : \"btn-outline-secondary\";\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    type=\"button\"\r\n                    className={`btn ${addClass}`}\r\n                    onClick={() => this.props.onFilterSelect(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n        return <div className=\"btn-group\">{buttons}</div>;\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nimport './post-status-filter.css';\r\nexport default PostStatusFilter;","import PostListItem from './post-list-item';\r\nimport './post-list-item.css'\r\nexport default PostListItem;","import React, { useEffect, useState } from \"react\";\r\nimport \"./post-list-item.css\";\r\n\r\nconst PostListItem = (props) => {\r\n    const {\r\n        id,\r\n        label,\r\n        onDelete,\r\n        onToggleImportant,\r\n        onToggleLiked,\r\n        important,\r\n        like,\r\n        changePost,\r\n        addChangePost,\r\n        changePostId,\r\n    } = props;\r\n\r\n    let [text, setText] = useState(label);\r\n\r\n    useEffect(() => {\r\n        setText(label);\r\n    }, [label]);\r\n\r\n    let newPostText = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    let currentChangeId = (id) => {\r\n        changePost(id);\r\n    };\r\n\r\n    let addNewChangePost = (e) => {\r\n        e.preventDefault();\r\n        addChangePost(text, id);\r\n    };\r\n\r\n    const NewPost = () => {\r\n        if (changePostId === id) {\r\n            return (\r\n                <form key={id} onSubmit={addNewChangePost}>\r\n                    <input\r\n                        className=\"post-change\"\r\n                        type=\"text\"\r\n                        onChange={newPostText}\r\n                        value={text}\r\n                        autoFocus={true}\r\n                    ></input>\r\n                    <button type=\"submit\" className=\"btn-sm\">\r\n                        <i className=\"fa fa-share-square\"></i>\r\n                    </button>\r\n                </form>\r\n            );\r\n        } else {\r\n            return <span className=\"app-list-item-label\">{text}</span>;\r\n        }\r\n    };\r\n\r\n    let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n    if (important) {\r\n        classNames += \" important\";\r\n    }\r\n    if (like) {\r\n        classNames += \" like\";\r\n    }\r\n    return (\r\n        <div className={classNames}>\r\n            <i className=\"fa fa-heart\"></i>\r\n            <div className=\"d-flex\">\r\n                <button className=\"add-like\" onClick={onToggleLiked}>\r\n                    <i className=\"fa fa-thumbs-up\"></i>\r\n                </button>\r\n                <div className=\"app-list-item-label-wrapper\">\r\n                    <NewPost />\r\n                </div>\r\n            </div>\r\n            <div className=\"app-list-item-actions d-flex justify-content-center align-items-center\">\r\n                <button type=\"button\" className=\"btn-star btn-sm\" onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-trophy\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn-pencil btn-sm\" onClick={() => currentChangeId(id)}>\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                </button>\r\n                <button type=\"button\" className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n                    <i className=\"fa fa-ban\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostListItem;\r\n","import PostList from './post-list'\r\nimport './post-list.css';\r\nexport default PostList;","import React from \"react\";\r\nimport PostListItem from \"../post-list-item\";\r\nimport \"./post-list.css\";\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked, changePost, changePostId, addChangePost }) => {\r\n    const elements = posts.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    id={id}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n                    changePost={() => changePost(id)}\r\n                    changePostId={changePostId}\r\n                    addChangePost={addChangePost}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return <ul className=\"app-list list-group\">{elements}</ul>;\r\n};\r\n\r\nexport default PostList;\r\n","import ErrorField from \"./error-field\";\r\nexport default ErrorField;\r\n","import React from \"react\";\r\nimport \"./error-field.css\";\r\nconst ErrorField = ({ type }) => {\r\n    return (\r\n        <div className=\"error-massage\">\r\n            {type === \"newPost\" ? <i>Ваша запись не должна быть пустой</i> : <i>Пожалуйста введите ваше имя</i>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorField;\r\n","import React, { Component } from \"react\";\r\nimport ErrorField from \"../error-field\";\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            emptyFieldError: false,\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event) {\r\n        this.setState({\r\n            text: event.target.value,\r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.text) {\r\n            const text = this.state.text;\r\n\r\n            if (text.length > 0) {\r\n                this.props.onAdd(text);\r\n                this.setState({\r\n                    text: \"\",\r\n                    emptyFieldError: false,\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                emptyFieldError: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Добавьте новую запись\"\r\n                        className=\"form-control new-post-label\"\r\n                        onChange={this.onValueChange}\r\n                        value={this.state.text}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n                        Добавить\r\n                    </button>\r\n                </form>\r\n                {this.state.emptyFieldError && <ErrorField type=\"newPost\" />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import PostAddForm from './post-add-form';\r\nimport './post-add-form.css';\r\nexport default PostAddForm;","import EnterName from './enterName';\r\nexport default EnterName;","import React, { Component } from \"react\";\r\nimport \"./enter-name.css\";\r\nimport ErrorField from \"../error-field\";\r\n\r\nexport default class EnterName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            user: \"\",\r\n            error: false,\r\n            enter: false,\r\n            formAdded: false,\r\n        };\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            formAdded: true,\r\n        });\r\n    }\r\n\r\n    onNameChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value,\r\n            user: e.target.value,\r\n        });\r\n    };\r\n    onSubmit = (e) => {\r\n        const { user } = this.state;\r\n        e.preventDefault();\r\n        if (user.length >= 1) {\r\n            this.props.addName(user);\r\n            this.setState({\r\n                text: \"\",\r\n                user: \"\",\r\n                error: false,\r\n                enter: false,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                error: true,\r\n                enter: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"name-form-wrapper\">\r\n                {this.props.newName && (\r\n                    <>\r\n                        <form className=\"d-flex name-form\" onSubmit={this.onSubmit}>\r\n                            <input\r\n                                className=\"name-label form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Введите ваше имя\"\r\n                                onChange={this.onNameChange}\r\n                                value={this.state.text}\r\n                            ></input>\r\n\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                                Отправить\r\n                            </button>\r\n                        </form>\r\n                        {this.state.error && <ErrorField type=\"newName\" />}\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PostsInfo from \"./posts-info\";\r\nexport default PostsInfo;\r\n","import \"./post-info.css\";\r\nconst PostsInfo = (props) => {\r\n    const { allPosts, liked } = props;\r\n    return (\r\n        <div className=\"post-info-wrapper\">\r\n            <div className=\"post-info\">\r\n                Всего <span>{allPosts}</span> записей. Из них понравилось : <span>{liked}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsInfo;\r\n","import App from './app'\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport \"./app.css\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport PostStatusFilter from \"../post-status-filter\";\r\nimport PostList from \"../post-list/\";\r\nimport PostAddForm from \"../post-add-form\";\r\nimport EnterName from \"../enter-name\";\r\n\r\nimport PostsInfo from \"../posts-info\";\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: \"иммутабельное изменение стейта\", important: true, like: false, id: \"1\" },\r\n                {\r\n                    label: \"хук локального стейта при отрисовке каждого поля\",\r\n                    important: true,\r\n                    like: true,\r\n                    id: \"2\",\r\n                },\r\n                { label: \"возможность редактирования поста\", important: true, like: true, id: \"3\" },\r\n                { label: \"svg icons\", important: false, like: false, id: \"4\" },\r\n                { label: \"фильтр по записям\", important: false, like: false, id: \"5\" },\r\n                { label: \"уникальный key для новых полей\", important: true, like: false, id: \"6\" },\r\n                { label: \"счетчик записей\", important: false, like: true, id: \"7\" },\r\n                { label: \"оповещение об ошибках\", important: true, like: false, id: \"8\" },\r\n            ],\r\n            term: \"\",\r\n            filter: \"all\",\r\n            user: \"Привет, Незнакомец!\",\r\n            changeUserName: false,\r\n            changePost: null,\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.addName = this.addName.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.changePost = this.changePost.bind(this);\r\n        this.addChangePost = this.addChangePost.bind(this);\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    addChangePost(post, id) {\r\n        this.setState(({ data }) => {\r\n            const postIndex = data.findIndex((el) => el.id === id);\r\n\r\n            const newPostChanged = { ...data[postIndex], label: post };\r\n\r\n            const newArr = [...data.slice(0, postIndex), newPostChanged, ...data.slice(postIndex + 1)];\r\n            return {\r\n                data: newArr,\r\n                changePost: null,\r\n            };\r\n        });\r\n    }\r\n\r\n    addName(name) {\r\n        const newName = name;\r\n        this.setState(() => {\r\n            return {\r\n                user: newName,\r\n                changeUserName: false,\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        let newId = null;\r\n        const lastElem = this.state.data?.length;\r\n        if (lastElem === 0) {\r\n            newId = 1;\r\n        } else newId = +this.state.data[lastElem - 1].id + 1;\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: newId,\r\n        };\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onChangeName() {\r\n        this.addName(\"Введите Ваше имя\");\r\n        this.setState({\r\n            changeUserName: true,\r\n        });\r\n    }\r\n\r\n    changePost(id) {\r\n        this.setState({\r\n            changePost: id,\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, important: !old.important };\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === \"like\") {\r\n            return items.filter((item) => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({\r\n            term: term,\r\n        });\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    render() {\r\n        window.state = this.state;\r\n        const { data, term, filter, user, changeUserName, changePost } = this.state;\r\n        const liked = data.filter((item) => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader userName={user} changeName={this.onChangeName} />\r\n                <EnterName addName={this.addName} newName={changeUserName} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostsInfo liked={liked} allPosts={allPosts} />\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                    changePost={this.changePost}\r\n                    addChangePost={this.addChangePost}\r\n                    changePostId={changePost}\r\n                />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}