{"version":3,"sources":["components/change-name/index.js","components/change-name/changeName.js","components/app-header/app-header.js","components/app-header/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/post-status-filter/post-status-filter.js","components/post-status-filter/index.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/post-add-form/index.js","components/error-field/index.js","components/error-field/error-field.js","components/enter-name/index.js","components/enter-name/enterName.js","components/posts-info/index.js","components/posts-info/posts-info.js","components/app/index.js","components/app/app.js","index.js"],"names":["ChangeName","change","type","onClick","className","AppHeader","userName","changeName","SearchPanel","props","state","term","onUpdateSearch","bind","event","target","value","this","setState","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","addClass","filter","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","React","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","length","onAdd","ErrorField","EnterName","onNameChange","e","user","addName","error","enter","formAdded","newName","PostsInfo","allPosts","liked","App","data","changeUserName","deleteItem","addItem","onChangeName","index","findIndex","elem","before","slice","after","body","lastElem","newItem","old","items","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d600631f.chunk.js","sourcesContent":["import ChangeName from './changeName';\r\nexport default ChangeName;","import React from 'react';\r\n\r\nconst ChangeName = ({change}) =>{\r\n\t\r\n\treturn (\r\n\t\t<button \r\n\t\ttype='submit'\r\n\t\tonClick={change}\r\n\t\tclassName='btn btn-outline-danger'>Сменить имя</button>\r\n\t)\r\n}\r\n\r\nexport default ChangeName;","import React from \"react\";\r\nimport ChangeName from \"../change-name\";\r\n\r\nconst AppHeader = ({ userName, changeName }) => {\r\n    return (\r\n        <div className=\"app-header d-flex justify-content-start\">\r\n            <h1>{userName}</h1>\r\n            <ChangeName change={changeName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import AppHeader from './app-header';\r\nimport './app-header.css';\r\nexport default AppHeader;","import React, { Component } from \"react\";\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: \"\",\r\n        };\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(event) {\r\n        const term = event.target.value;\r\n        this.setState({\r\n            term: term,\r\n        });\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import SearchPanel from './search-panel';\r\nimport './search-panel.css';\r\nexport default SearchPanel;","import React, { Component } from \"react\";\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor({ props }) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: \"all\", label: \"Все\" },\r\n            { name: \"like\", label: \"Понравилось\" },\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const active = this.props.filter === name;\r\n            const addClass = active ? \"btn-success\" : \"btn-outline-secondary\";\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    type=\"button\"\r\n                    className={`btn ${addClass}`}\r\n                    onClick={() => this.props.onFilterSelect(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n        return <div className=\"btn-group\">{buttons}</div>;\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nimport './post-status-filter.css';\r\nexport default PostStatusFilter;","import PostListItem from './post-list-item';\r\nimport './post-list-item.css'\r\nexport default PostListItem;","import React from \"react\";\r\nimport \"./post-list-item.css\";\r\n\r\nexport default class PostListItem extends React.Component {\r\n    render() {\r\n        const { label, onDelete, onToggleImportant, onToggleLiked, important, like } = this.props;\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n        if (like) {\r\n            classNames += \" like\";\r\n        }\r\n        return (\r\n            <div className={classNames}>\r\n                <i className=\"fa fa-heart\"></i>\r\n                <div className=\"d-flex\">\r\n                    <button className=\"add-like\" onClick={onToggleLiked}>\r\n                        <i className=\"fa fa-thumbs-up\"></i>\r\n                    </button>\r\n                    <span className=\"app-list-item-label\">{label}</span>\r\n                </div>\r\n                <div className=\"app-list-item-actions d-flex justify-content-center align-items-center\">\r\n                    <button type=\"button\" className=\"btn-star btn-sm\" onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-trophy\"></i>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n                        <i className=\"fa fa-ban\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PostList from './post-list'\r\nimport './post-list.css';\r\nexport default PostList;","import React from \"react\";\r\nimport PostListItem from \"../post-list-item\";\r\nimport \"./post-list.css\";\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n    const elements = posts.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n            <li key={item.id} className=\"list-group-item\">\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return <ul className=\"app-list list-group\">{elements}</ul>;\r\n};\r\n\r\nexport default PostList;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(event) {\r\n        this.setState({\r\n            text: event.target.value,\r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.text) {\r\n            const text = this.state.text;\r\n\r\n            if (text.length > 0) {\r\n                this.props.onAdd(text);\r\n                this.setState({\r\n                    text: \"\",\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Добавьте новую запись\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import PostAddForm from './post-add-form';\r\nimport './post-add-form.css';\r\nexport default PostAddForm;","import ErrorField from \"./error-field\";\r\nexport default ErrorField;\r\n","import React from \"react\";\r\nimport \"./error-field.css\";\r\nconst ErrorField = () => {\r\n    return (\r\n        <div className=\"error-massage\">\r\n            <i>Пожалуйста введите ваше имя</i>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorField;\r\n","import EnterName from './enterName';\r\nexport default EnterName;","import React, { Component } from \"react\";\r\nimport \"./enter-name.css\";\r\nimport ErrorField from \"../error-field\";\r\n\r\nexport default class EnterName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            user: \"\",\r\n            error: false,\r\n            enter: false,\r\n            formAdded: false,\r\n        };\r\n        this.onNameChange = this.onNameChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            formAdded: true,\r\n        });\r\n    }\r\n\r\n    onNameChange = (e) => {\r\n        this.setState({\r\n            text: e.target.value,\r\n            user: e.target.value,\r\n        });\r\n    };\r\n    onSubmit = (e) => {\r\n        const { user } = this.state;\r\n        e.preventDefault();\r\n        if (user.length >= 1) {\r\n            this.props.addName(user);\r\n            this.setState({\r\n                text: \"\",\r\n                user: \"\",\r\n                error: false,\r\n                enter: false,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                error: true,\r\n                enter: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.props.newName && (\r\n                <>\r\n                    <form className=\"d-flex name-form\" onSubmit={this.onSubmit}>\r\n                        <input\r\n                            className=\"name-label form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Введите ваше имя\"\r\n                            onChange={this.onNameChange}\r\n                            value={this.state.text}\r\n                        ></input>\r\n\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                            Отправить\r\n                        </button>\r\n                    </form>\r\n                    {this.state.error && <ErrorField />}\r\n                </>\r\n            )\r\n        );\r\n    }\r\n}\r\n","import PostsInfo from \"./posts-info\";\r\nexport default PostsInfo;\r\n","const PostsInfo = (props) => {\r\n    const { allPosts, liked } = props;\r\n    return (\r\n        <div>\r\n            {allPosts} записей, из них понравилось {liked}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostsInfo;\r\n","import App from './app'\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport PostStatusFilter from \"../post-status-filter\";\r\nimport PostList from \"../post-list/\";\r\nimport PostAddForm from \"../post-add-form\";\r\nimport EnterName from \"../enter-name\";\r\n\r\nimport \"./app.css\";\r\nimport PostsInfo from \"../posts-info\";\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: \"фильтр по записям\", important: false, like: false, id: \"1\" },\r\n                { label: \"иммутабельное изменение стейта\", important: true, like: false, id: \"2\" },\r\n                { label: \"react-icon svg\", important: false, like: true, id: \"3\" },\r\n                { label: \"уникальный key для новых полей\", important: true, like: false, id: \"4\" },\r\n                { label: \"счетчик записей\", important: false, like: true, id: \"5\" },\r\n            ],\r\n            term: \"\",\r\n            filter: \"all\",\r\n            user: \"Привет, незнакомец!\",\r\n            changeUserName: false,\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.addName = this.addName.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    addName(name) {\r\n        const newName = name;\r\n        this.setState(() => {\r\n            return {\r\n                user: newName,\r\n                changeUserName: false,\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        let newId = null;\r\n        const lastElem = this.state.data?.length;\r\n        if (lastElem === 0) {\r\n            newId = 1;\r\n        } else newId = +this.state.data[lastElem - 1].id + 1;\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: newId,\r\n        };\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onChangeName() {\r\n        this.addName(\"Решили сменить имя?\");\r\n        this.setState({\r\n            changeUserName: true,\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, important: !old.important };\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr,\r\n            };\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === \"like\") {\r\n            return items.filter((item) => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({\r\n            term: term,\r\n        });\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    render() {\r\n        const { data, term, filter, user, changeUserName } = this.state;\r\n        const liked = data.filter((item) => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader userName={user} changeName={this.onChangeName} />\r\n                <EnterName addName={this.addName} newName={changeUserName} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter filter={filter} onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <PostsInfo liked={liked} allPosts={allPosts} />\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm onAdd={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}